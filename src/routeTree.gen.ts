/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootLayoutImport } from './routes/_root-layout'
import { Route as AuthLayoutImport } from './routes/_auth-layout'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as AuthLayoutSignUpImport } from './routes/_auth-layout/sign-up'
import { Route as AuthLayoutSignInImport } from './routes/_auth-layout/sign-in'
import { Route as ProductsProductIdIndexImport } from './routes/products/$productId/index'
import { Route as ProductsProductIdEditImport } from './routes/products_/$productId/edit'

// Create Virtual Routes

const RootLayoutIndexLazyImport = createFileRoute('/_root-layout/')()

// Create/Update Routes

const RootLayoutRoute = RootLayoutImport.update({
  id: '/_root-layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const RootLayoutIndexLazyRoute = RootLayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => RootLayoutRoute,
} as any).lazy(() =>
  import('./routes/_root-layout/index.lazy').then((d) => d.Route),
)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutSignUpRoute = AuthLayoutSignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutSignInRoute = AuthLayoutSignInImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const ProductsProductIdIndexRoute = ProductsProductIdIndexImport.update({
  path: '/products/$productId/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdEditRoute = ProductsProductIdEditImport.update({
  path: '/products/$productId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-layout': {
      id: '/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_root-layout': {
      id: '/_root-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth-layout/sign-in': {
      id: '/_auth-layout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthLayoutSignInImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth-layout/sign-up': {
      id: '/_auth-layout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthLayoutSignUpImport
      parentRoute: typeof AuthLayoutImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_root-layout/': {
      id: '/_root-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RootLayoutIndexLazyImport
      parentRoute: typeof RootLayoutImport
    }
    '/products/$productId/edit': {
      id: '/products/$productId/edit'
      path: '/products/$productId/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof ProductsProductIdEditImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId/': {
      id: '/products/$productId/'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthLayoutRoute: AuthLayoutRoute.addChildren({
    AuthLayoutSignInRoute,
    AuthLayoutSignUpRoute,
  }),
  RootLayoutRoute: RootLayoutRoute.addChildren({ RootLayoutIndexLazyRoute }),
  ProductsIndexRoute,
  ProductsProductIdEditRoute,
  ProductsProductIdIndexRoute,
})

/* prettier-ignore-end */
